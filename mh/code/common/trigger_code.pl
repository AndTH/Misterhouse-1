# Category = MisterHouse

#@ Monitors trigger code, used by code like tv_grid and the web alarm page,
#@ that specifies events that run only a limited number of times.

use vars '@trigger_data';

$trigger_code_v = new Voice_Cmd '[Read,Save] the triggers file';
$trigger_code_v-> set_info('Read from or save to the data_dir/triggers.current file');

&Exit_add_hook(\&triggers_save) if $Reload;
&triggers_save(1) if new_minute 5 or ('Save' eq said $trigger_code_v);
&triggers_read(0) if $Startup     or ('Read' eq said $trigger_code_v);
&triggers_read(1) if new_second 10;

# Read either current triggers file (at startup) or new entries periodicaly
sub triggers_read {
    my ($new) = @_;
                                # Read trigger data
    my $trigger_file = "$config_parms{data_dir}/triggers";
    $trigger_file .= ($new) ? '.new' : '.current';
    return unless -e $trigger_file;

    my $i = 0;
    $i = @trigger_data if $new;      # Add on to existing entries
    undef @trigger_data unless $new;

    select undef, undef, undef, .1;  # Make sure file is saved ok
    for my $record (&file_read($trigger_file), '') {
        if ($record =~ /\S/) {
            next if $record =~ /^ *#/;
            if ($record =~ /^ *(\d+) *(\d*) *$/) {
                $trigger_data[$i]{limit} = $1;
                $trigger_data[$i]{count} = $2;
            }
            elsif (!$trigger_data[$i]{trigger}) {
                $trigger_data[$i]{trigger} = $record;;
            }
            else {
                $trigger_data[$i]{code} .= $record . "\n";
            }
        }
        elsif ($trigger_data[$i]{trigger}) {
                                # Set default to trigger just once
            $trigger_data[$i]{limit} = 1 unless $trigger_data[$i]{limit};
            $trigger_data[$i]{count} = 0 unless $trigger_data[$i]{count};
            $i++;
        }
    }
    print_log "Read $i trigger entries";
    unlink $trigger_file if $new;
    &triggers_save;
    &trigger_write_code;
}

                                # Write trigger code
sub trigger_write_code {
    my $j = -1;
    my $code;
    while (++$j <= $#trigger_data) {
        next unless $trigger_data[$j]{trigger};
        $code .= "\n# limit=$trigger_data[$j]{limit}  count=$trigger_data[$j]{count}\n";
        $code .= "if (\$trigger_data[$j]{count} < \$trigger_data[$j]{limit} and\n";
        $code .= "    $trigger_data[$j]{trigger}) {\n";
        $code .= "    $trigger_data[$j]{code}";
        $code .= "    \$trigger_data[$j]{count}++;\n}\n";
    }
    return unless $code;
    $code = "#\n# Do NOT edit.  This file is auto-generated by mh/code/common/trigger_code.pl\n" . 
            "# and reflects the data in data_dir/triggers.current\n#\n" . $code;
    &file_write("$config_parms{code_dir}/triggers.pl", $code);
                                # Replace (faster) or reload (if there was no file previously)
    if ($Run_Members{'triggers'}) {
        &do_user_file("$config_parms{code_dir}/triggers.pl");
    }
    else {
                                # Must be done before the user code eval
        push @Nextpass_Actions, \&read_code;
    }

}

                                # Save and prune out expired triggers
sub triggers_save {
    my ($data, $data1, $data2, $j, $i1, $i2);
    $j = -1;
    $i1 = $i2 = 0;
    $data1 = $data2 = '';
    while (++$j <= $#trigger_data) {
        next unless $trigger_data[$j]{trigger};
        $data  =  $trigger_data[$j]{trigger} . "\n";
        $data .=  $trigger_data[$j]{code};
        $data .= "$trigger_data[$j]{limit} $trigger_data[$j]{count}\n";
        if ($trigger_data[$j]{count} < $trigger_data[$j]{limit}) {
            $data1 .= $data . "\n";
            $i1++;
        }
        else {
            $data2 .= $data . "\n";
            $i2++;
        }
    }
    print_log "Saving triggers:  $i2 expired, $i1 saved" if $i2;
    $data1 = '#
# This file is used by mh/code/common/trigger_code.pl to auto-generate code_dir/triggers.pl.
# Normally this file is updated by creating entries into 
# triggers.new, which is read and deleted every 10 seconds.
# If you manually edit this file, run "Read the triggers file"
# before mh re-saves this file (every 5 minutes).  
# Syntax for both triggers.current and triggers.new is:
#
#  trigger_clause
#    code_to_run
#    code_to_run
#  count_times_to_run  count_times_it_has_run
#
# The count* record is optional (defaults to running just once)
#

' . $data1;
    $data2 = "# Expired on $Time_Date\n" . $data2 if $data2;
    &file_write("$config_parms{data_dir}/triggers.current",    $data1);
    &logit("$config_parms{data_dir}/triggers.expired", $data2, 0) if $data2;
}


#if ($Trigger_Data[1]{count} < $Trigger_Data[1]{limit} and time_now '1/26 9:30') {
#    set $VCR '14,RECORD';
#    $Trigger_Data[1]{count}++;
#}
